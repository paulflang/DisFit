version: 2.1
jobs:
  build:
    docker:
      - image: paulflang/disfit
    # working_directory: ~/repo
    steps:
      - run:
          name: look at envir
          command: |
            pwd
            echo "lsing:"
            ls
            DisFit optimize -h
            cd /DisFit
            ls
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.dev.txt" }}
      # - restore_cache:
      #     keys:
      #       - v1-dependencies-{{ checksum "requirements.dev.txt" }}
      #       - v1-dependencies-
      # - run:
      #     name: install dependencies
      #     command: python3 -m pip install -r requirements.dev.txt
      # - run:
      #     name: install pytest
      #     command: python3 -m pip install -U pytest
      - run:
          name: Install Python deps in a venv
          command: |
            apt-get install python3-venv -y
            python3 -m venv venv
            . venv/bin/activate
            ls
            python3 -m pip install DisFit
            python3 -m pip install -r requirements.dev.txt
            ls
            echo "source /root/project/venv/bin/activate" >> $BASH_ENV
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.dev.txt" }}
          paths:
            - "venv"
      # - save_cache:
      #     key: v1-dependencies-{{ checksum "requirements.dev.txt" }}
      #     paths:
            # - /usr/local/lib/python3.8/dist-packages
            - "venv"
      # - store_artifacts:
      #   path: test-reports
      #   destination: test-reports
  test_core:
    docker:
      - image: paulflang/disfit
    # working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            apt-get install python3-venv -y
            python3 -m venv venv
            . venv/bin/activate
            python3 -m pip install DisFit
            ls
            python3 -m pip install -r requirements.dev.txt
            ls
            echo "source /root/project/venv/bin/activate" >> $BASH_ENV
      - run: 
          name: test_core
          command: |
            pwd
            ls
            . venv/bin/activate
            python3 -m pytest tests/test_core.py
  test_main:
    docker:
      - image: paulflang/disfit
    # working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            apt-get install python3-venv -y
            python3 -m venv venv
            . venv/bin/activate
            ls
            python3 -m pip install DisFit
            python3 -m pip install -r requirements.dev.txt
            ls
            echo "source /root/project/venv/bin/activate" >> $BASH_ENV
      - run:
          name: test main
          command: |
            . venv/bin/activate
            python3 -m pytest tests/test_main.py

workflows:
  version: 2.1
  test_build_core_main:
    jobs:
      - build
      - test_core:
          requires:
            - build
      - test_main:
          requires:
            - build
            - test_core #